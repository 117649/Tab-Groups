/* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0. If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/. */

:root {
	--hover-color: rgba(128,128,128,0.4);
	--item-normal-shadow: 0 1px 5px rgba(60, 60, 60, 0.6);
	--scrollbar-width: 10px;
	--thumbs-tab-padding: 10px;
	--list-tab-height: 37px;
	--list-tab-padding: 6px;
	--favicon-size: 16px;
	--canvas-border-width: 1px;
	--group-min-width: 120px;
	--group-min-height: 145px;
	--group-border-width: 1px;
	--group-titlebar-height: 24px;
	--group-contents-margin: 0;
	--group-contents-top-margin: 2px;
	--stack-expander-size: 24px;
	--stack-expander-top-margin: 0;
	--stack-expander-bottom-margin: 8px;
	--group-selector-size: 160px;
	--group-selector-padding: 15px;
	--group-selector-title-height: 14px;
	--actions-width: 29px;
	--shade-background: rgba(0,0,0,.42);
	--drag-animation: margin 150ms linear;
}

body {
	--workspace-height: 100%;
	/* active workspace excludes the width and borders of the action buttons, excludes its own borders (or of its items) as well */
	--workspace-width: calc(100% - var(--actions-width) - (var(--group-border-width) * 2));
}

body.single {
	/* in single mode we need to exclude the borders from the groups/groupSelector themselves as well */
	--workspace-width: calc(100% - var(--actions-width) - (var(--group-border-width) * 4));
	/* for single view, we need to exclude the group selector at the top and its borders */
	--workspace-height: calc(100% - var(--group-selector-size) - (var(--group-border-width) * 2));
	/* it's kind of silly that I have to exclude borders here as well... am I missing something? */
	--group-single-height: calc(100% - (var(--group-border-width) * 2));
}

html {
	overflow: hidden;
	-moz-user-select: none;
}

body {
	padding: 0;
	margin: 0;
	color: -moz-DialogText;
}

#content {
	overflow: -moz-hidden-unscrollable;
}

html, body, #content {
	height: 100%;
	width: 100%;
}

#groups {
	position: relative;
	height: var(--workspace-height);
	width: var(--workspace-width);
}

body.grid #groups {
	display: flex;
	flex-wrap: wrap;
	align-items: stretch;
	overflow-x: hidden;
	overflow-y: auto;
}

body.grid #groups.overflowing {
	-moz-padding-end: var(--scrollbar-width);
	/* same as above, plus its own padding to add space to the scrollbar */
	width: calc(100% - var(--workspace-width) - var(--scrollbar-width));
}

html.thumbing,
html.thumbing body.single #groups,
html.thumbing body.single #content {
	overflow: visible;
}

/* Tabs */

.tab {
	overflow: hidden;
	padding: var(--thumbs-tab-padding);
	margin: 0;
	cursor: pointer;
}

.tabHidden {
	display: none;
}

body.DraggingTab .tab {
	transition: var(--drag-animation);
}

body.DraggingTab .tab * {
	pointer-events: none;
}

.tab-container:not(.noThumbs) .thumb {
	position: relative;
	overflow: hidden;
	width: 100%;
	background-color: var(--item-background);
}

.tab.stacked .thumb {
	height: 100%;
}

.thumb > *:-moz-any(canvas,.cached-thumb) {
	background-color: white;
	background-clip: content-box;
	border: var(--item-border);
}

.tab.cached-data .cached-thumb,
.tab:not(.cached-data) canvas {
	/* minus the borders, canvas are insane because they need width/height attributes to work properly,
	   which completely messes up their layout unless overriden here. */
	width: calc(100% - var(--canvas-border-width) - var(--canvas-border-width)) !important;
	height: calc(100% - var(--canvas-border-width) - var(--canvas-border-width)) !important;
}

.tab.cached-data canvas,
.tab:not(.cached-data) .cached-thumb,
.tab.noFavicon .favicon-container {
	display: none;
}

.favicon-container {
	position: absolute;
	background-color: var(--item-background);
	border-top: 1px solid transparent;
	border-bottom: var(--item-border);
	-moz-border-start: 1px solid transparent;
	-moz-border-end: var(--item-border);
}

.tab-container:not(.noThumbs) .favicon-container {
	min-width: 17px;
	min-height: 17px;
	max-width: 27px;
	max-height: 27px;
	width: calc(100% - 10px - 4px);
	height: calc(100% - 10px - 4px);
}

.tab-container:not(.noThumbs) .favicon-container:-moz-locale-dir(ltr) {
	border-bottom-right-radius: 0.4em;
}

.tab-container:not(.noThumbs) .favicon-container:-moz-locale-dir(rtl) {
	border-bottom-left-radius: 0.4em;
}

.tab-container:not(.noThumbs) .tab:not(.stacked) .favicon-container { top: 0; }
.tab-container:not(.noThumbs) .tab:not(.stacked) .favicon-container:-moz-locale-dir(ltr) { left: 0; }
.tab-container:not(.noThumbs) .tab:not(.stacked) .favicon-container:-moz-locale-dir(rtl) { right: 0; }

.tab.stacked .favicon-container { top: 1px; }
.tab.stacked .favicon-container:-moz-locale-dir(ltr) { left: 1px; }
.tab.stacked .favicon-container:-moz-locale-dir(rtl) { right: 1px; }

.favicon {
	width: 100%;
	height: 100%;
	background-repeat: no-repeat;
	background-size: var(--favicon-size) var(--favicon-size);
	background-position: center center;
}

/* Apply crisp rendering for favicons at exactly 2dppx resolution */
@media (resolution: 2dppx) {
	.favicon {
		image-rendering: -moz-crisp-edges;
	}
}

.close {
	cursor: pointer;
	background-repeat: no-repeat;
	background-position: center center;
}

.tab .close {
	position: absolute;
	top: 0;
	width: 22px;
	height: 22px;
}

.tab .close:-moz-locale-dir(ltr) {
	right: 0;
}

.tab .close:-moz-locale-dir(rtl) {
	left: 0;
}

.tab-title {
	display: block;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	text-align: center;
	margin: 3px 0;
}

.stacked {
	position: absolute;
	overflow: visible;
}

.stacked.behind {
	pointer-events: none;
}

.stacked .tab-title {
	display: none;
}

.stacked .thumb {
	box-shadow: rgba(0,0,0,.2) 1px 1px 4px;
}

.stacked .thumb:-moz-locale-dir(rtl) {
	box-shadow: rgba(0,0,0,.2) -1px 1px 4px;
}

.groupItem.thumbing .tab-title,
.groupItem.thumbing .favicon-container,
.groupItem.thumbing .close {
	opacity: 0;
}

/* Tab GroupItem */

.groupItem,
.expandedTray {
	overflow: hidden;
}

#groupSelector,
.groupItem,
.expandedTray,
.undo:not(.inGroupSelector) {
	background-color: var(--item-background);
	border-top: var(--group-border-width) solid ThreeDHighlight;
	border-bottom: var(--group-border-width) solid ThreeDLightShadow;
	-moz-border-start: var(--group-border-width) solid ThreeDHighlight;
	-moz-border-end: var(--group-border-width) solid ThreeDLightShadow;
}

#groupSelector,
body:not(.classic) .groupItem {
	border-bottom-color: ThreeDShadow;
	-moz-border-end-color: ThreeDShadow;
}

body.classic .groupItem,
.expandedTray {
	position: absolute;
	box-shadow: var(--item-normal-shadow);
}

body.classic .groupItem.activeGroupItem,
.expandedTray {
	box-shadow: rgba(0,0,0,0.8) 2px 2px 8px;
}

body.classic .groupItem.activeGroupItem:-moz-locale-dir(rtl),
.expandedTray:-moz-locale-dir(rtl) {
	box-shadow: rgba(0,0,0,0.8) 2px 2px 8px;
}

.groupItem:not(.closed).stackedGroup {
	cursor: pointer;
}

body:not(.single) .groupItem:not(.closed):not(.stackedGroup) {
	cursor: grab;
}

body.classic:not(.searching) .groupItem:not(.phantom) {
	resize: both;
}

body.grid .groupItem {
	position: relative;
	flex: 1 1 auto;
}

body.single .groupItem {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: var(--group-single-height);
}

body.single .groupItem:not(.activeGroupItem):not(.thumbing) {
	display: none;
}

body.single .groupItem:not(.activeGroupItem).thumbing {
	top: 100%;
}

body:not(.classic) .groupItem.closed > *:not(.undo) {
	display: none;
}

body.DraggingGroup .groupItem * {
	pointer-events: none;
}

body:not(.grid) .groupItem:not(.phantom) {
	min-height: var(--group-min-height);
	min-width: var(--group-min-width);
}

.groupItem .contents {
	margin-top: var(--group-contents-top-margin);
	overflow: hidden;
	/* leave space for titlebar and for its own margin */
	height: calc(100% - var(--group-titlebar-height) - var(--group-contents-top-margin));
}

.tab-container {
	position: relative;
	width: 100%;
	height: 100%;
	display: flex;
	flex-wrap: wrap;
	align-content: flex-start;
	overflow-x: hidden;
	overflow-y: auto;
}

.groupItem.stackedGroup .tab-container {
	/* leave space for the stack expander */
	height: calc(100% - 32px);
	overflow-y: hidden;
}

.undo {
	position: absolute;
	display: flex;
	align-items: stretch;
	align-content: stretch;
	cursor: pointer;
	opacity: 0.75;
}

.undo:not(.inGroupSelector) {
	box-shadow: var(--item-normal-shadow);
}

body:not(.classic) .undo {
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

.undo > span {
	flex: 1 1 auto;
	margin: 0.5em 1em;
	-moz-margin-end: 0.75em;
}

.undo .close {
	width: 16px;
	-moz-padding-end: 0.75em;
	background-position: 0 50%;
}

.phantom {
	position: absolute;
	cursor: default;
}

/* new group/tab items */

.stackedGroup .tab.create-new,
body:not(.grid) #gridNewGroup {
	display: none;
}

body:-moz-any(.DraggingTab,.DraggingGroup) .tab.create-new,
body:not(.single) .groupItem:not(:hover) .tab.create-new,
.groupItem.thumbing .tab.create-new {
	opacity: 0;
}

.create-new {
	position: relative;
	order: 9999999;
	-moz-user-focus: normal;
}

.create-new .create-new-border {
	pointer-events: none;
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	width: 65%;
	height: 65%;
	border: 5px dashed #333;
	opacity: 0.3;
}

.create-new:-moz-any(:hover,.dragOver) > .create-new-border {
	opacity: 0.75;
}

.create-new .create-new-plus {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	width: 75%;
	height: 75%;
	max-width: 100px;
	max-height: 100px;
	background-image: url("chrome://tabgroups/skin/newItem.png");
	background-size: contain;
	background-repeat: no-repeat;
	background-position: center;
}

/* tab items shown without thumbnails (listed only) */

.tab-container.noThumbs .tab {
	position: relative;
	flex: 1 1 auto;
	width: 100%;
	height: calc(var(--list-tab-height) - var(--list-tab-padding) - var(--list-tab-padding));
	padding: var(--list-tab-padding);
}

.tab-container.noThumbs .tab.space-before {
	margin-top: var(--list-tab-height);
}

.tab-container.noThumbs .tab.space-after {
	margin-bottom: var(--list-tab-height);
}

.tab-container.noThumbs .tab .thumb {
	/* this is just to prevent any sort of display glitch */
	width: 0;
	height: 0;
}

.tab-container.noThumbs .tab .cached-thumb,
.tab-container.noThumbs .tab canvas {
	display: none;
}

.tab-container.noThumbs .tab .favicon-container {
	top: 50%;
	transform: translateY(-50%);
	width: var(--favicon-size);
	height: var(--favicon-size);
	background: none;
	border: none;
	-moz-margin-start: 2px;
}

.tab-container.noThumbs .tab .close {
	top: 50%;
	transform: translateY(-50%);
	-moz-margin-end: 5px;
}

.tab-container.noThumbs .tab .tab-title {
	text-align: start;
	-moz-margin-end: 18px;
}

.tab-container.noThumbs .tab:not(.noFavicon) .tab-title {
	-moz-margin-start: 24px;
}

.tab-container.noThumbs .create-new-border {
	height: 100%;
	width: 100%;
	border: none;
}

/* Group Selector items */

#groupSelector {
	position: relative;
	width: var(--workspace-width);
	height: var(--group-selector-size);
	display: flex;
	overflow-x: auto;
	overflow-y: hidden;
	background-color: rgba(255,255,255,0.6);
}

body:not(.single) #groupSelector {
	display: none;
}

.groupSelector {
	position: relative;
	overflow: hidden;
	margin: 0;
	cursor: pointer;
	flex: 0 0 auto;
	width: var(--group-selector-size);
	height: var(--group-selector-size);
}

body.DraggingGroupSelector .groupSelector {
	transition: var(--drag-animation);
}

.groupSelector.space-before {
	-moz-margin-start: var(--group-selector-size);
}

.groupSelector.space-after {
	-moz-margin-end: var(--group-selector-size);
}

.groupSelector:not(.closedGroup) * {
	pointer-events: none;
}

.groupThumb {
	position: absolute;
	left: 50%;
	/* keeping this aligned correctly with the group title is a bit tricky,
	   as I'm trying to avoid using flexboxes because its a canvas and those lag there */
	top: calc(50% - (var(--group-selector-title-height) /2));
	transform: translate(-50%, calc(0px - 50% - (var(--group-selector-title-height) /4)));
	padding: 4px;
	border: var(--canvas-border-width) solid var(--hover-color);
	background-color: var(--item-background);
}

.groupSelector.closedGroup .groupThumb {
	display: none;
}

.groupSelector .group-title {
	display: block;
	position: absolute;
	bottom: calc(var(--group-selector-padding) / 2);
	left: 50%;
	transform: translateX(-50%);
	max-width: calc(100% - var(--group-selector-padding));
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	text-align: center;
}

body.DraggingGroupSelector #singleNewGroup {
	opacity: 0;
}

/* Trenches */

.guideTrench,
.visibleTrench,
.activeVisibleTrench {
	position: absolute;
}

.guideTrench {
	z-index: 202;
	opacity: 0.9;
	border: 1px dashed ThreeDHighlight;
	border-bottom: none;
	-moz-border-end: none;
	box-shadow: 1px 1px 0 ThreeDShadow;
}

.guideTrench:-moz-locale-dir(rtl) {
	box-shadow: -1px 1px 0 ThreeDShadow;
}

.visibleTrench {
	z-index: 200;
	opacity: 0.05;
}

.activeVisibleTrench {
	z-index: 201;
	opacity: 0;
}

.activeVisibleTrench.activeTrench {
	opacity: 0.45;
}

.visibleTrench.border,
.activeVisibleTrench.border {
	background-color: red;
}

.visibleTrench.guide,
.activeVisibleTrench.guide {
	background-color: blue;
}

/* Other */

body.classic .groupItem.dragging,
.groupItem.resizing {
	z-index: 100;
}

body.classic .groupItem.dragging,
body.classic .groupItem.dragging * {
	cursor: grabbing !important;
}

.titlebar {
	display: flex;
	cursor: move;
	font-size: 12px;
	height: var(--group-titlebar-height);
}

.titlebar > *:not(.title-container) {
	flex: 0 0 auto;
}

.title-container {
	position: relative;
	flex: 1 1 auto;
}

.titlebar .close {
	width: 26px;
	background-position: center center;
}

input.name {
	text-overflow: ellipsis;
	background: transparent;
	border: 1px solid transparent;
	margin-top: 3px;
	-moz-margin-start: 3px;
	padding: 1px;
	/* subtract own borders, margin and padding... */
	width: calc(100% - 7px);
}

input.name:-moz-locale-dir(rtl) {
	background-position: right top;
}

input.name:focus {
	text-overflow: clip;
}

.title-container:hover input.name,
.title-container input.name:focus {
	border-bottom-color: rgba(128,128,128,0.25);
}

input.name:not(:focus)::-moz-placeholder {
	background-image: url("chrome://tabgroups/skin/edit-light.png");
	background-repeat: no-repeat;
}

input.name.unnamed-group:not(:focus) {
	-moz-padding-start: 18px;
	width: calc(100% - 18px);
}

.unnamed-group:not(:focus) {
	font-style: italic;
	color: rgba(128,128,128,0.9);
}

input.name:focus::-moz-placeholder {
	color: transparent;
}

.title-shield {
	position: absolute;
	left: 0;
	top: 0;
	width: -moz-available;
	height: 100%;
	z-index: 10;
	cursor: text;
}

.transparentBorder {
	border: 1px solid transparent !important;
}

.groupItem:not(.stackedGroup) .stackExpander {
	display: none;
}

.stackExpander {
	cursor: pointer;
	background-image: -moz-image-rect(url(chrome://tabgroups-os/skin/stack-expander.png), 0, 48, 24, 24);
	width: var(--stack-expander-size);
	height: var(--stack-expander-size);
	margin: var(--stack-expander-top-margin) auto var(--stack-expander-bottom-margin);
}

.stackExpander:hover {
	background-image: -moz-image-rect(url(chrome://tabgroups-os/skin/stack-expander.png), 0, 24, 24, 0);
}

.expandedTray {
	z-index: 50;
}

.expandedTray .tab-container {
	width: 100%;
	height: 100%;
}

.shield {
	z-index: 10;
}

.shade {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: var(--shade-background);
}

.banner {
	left: 0;
	bottom: 0;
	right: 0;
	padding: 10px 0;
	position: absolute;
	z-index: 500;
	background: #000;
	color: #fff;
	opacity: 0;
	text-align: center;
	font-weight: 700;
}

.banner:not(#sessionRestoreNotice) {
	pointer-events: none;
	transition: opacity 1.5s;
}

.banner[show="true"] {
	opacity: 1;
}

#sessionRestoreNotice {
	opacity: 1;
	background-image: linear-gradient(#ffe13e, #ffc703);
	color: rgba(0,0,0,0.95);
	padding: 10px 20px;
}

#sessionRestoreNotice:hover {
	background-image: linear-gradient(#fff14e, #ffd713);
	cursor: pointer;
}

#sessionRestoreNotice .close {
	position: absolute;
	top: calc(50% - 8px);
	right: 6px;
	width: 16px;
	height: 16px;
}

#sessionRestoreNotice span {
	pointer-events: none;
}

/* Side buttons */

#actions {
	position: absolute;
	top: 0;
	align-self: start;
	padding: 3px 0;
	z-index: 30;
	width: var(--actions-width);
	text-align: center;
	border: var(--group-border-width) solid transparent;
	border-top-color: ThreeDHighlight;
}

#actions:-moz-locale-dir(ltr) {
	right: 0;
}

#actions:-moz-locale-dir(rtl) {
	left: 0;
}

body.classic #actions {
	background-color: var(--item-background);
	-moz-border-start-color: ThreeDHighlight;
	border-bottom-color: ThreeDHighlight;
}

body.grid #actions {
	border-bottom-color: ThreeDShadow;
	/* account for its own padding and borders */
	height: calc(100% - 8px);
}

.group-options,
#actions input {
	background-color: transparent;
	background-repeat: no-repeat;
	background-position: 50% 50%;
	background-attachment: scroll;
	border: none;
	cursor: pointer;
	padding: 0;
	width: 24px;
	height: 24px;
}

#actions #searchbutton {
	background-image: -moz-image-rect(url(chrome://tabgroups/skin/buttons.png), 0, 20, 20, 0);
}

.group-options,
#actions #optionsbutton {
	background-image: -moz-image-rect(url(chrome://tabgroups/skin/buttons.png), 0, 40, 20, 20);
}

#actions #helpbutton {
	background-image: -moz-image-rect(url(chrome://tabgroups/skin/buttons.png), 0, 60, 20, 40);
}

#actions #classicbutton {
	background-image: -moz-image-rect(url(chrome://tabgroups/skin/buttons.png), 0, 80, 20, 60);
}

#actions #gridbutton {
	background-image: -moz-image-rect(url(chrome://tabgroups/skin/buttons.png), 0, 100, 20, 80);
}

#actions #singlebutton {
	background-image: -moz-image-rect(url(chrome://tabgroups/skin/buttons.png), 0, 120, 20, 100);
}

#actions .grouped {
	margin-top: 3px;
	padding-top: 3px;
}

/* Pinned Tabs group */

#actions:not(.dragOver) #pinnedTabs:not([visible]) {
	display: none;
}

#actions.dragOver #pinnedTabs {
	padding-bottom: 24px;
}

body.DraggingTab .appTabIcon {
	transition: var(--drag-animation);
}

.appTabIcon {
	background-size: 18px 18px;
}

.appTabIcon.space-before {
	margin-top: 24px;
}

.appTabIcon.space-after {
	margin-bottom: 24px;
}

/* Various interaction effects */

.groupItem:not(.thumbing) .tab:not(.stacked).focus,
.groupItem:not(.thumbing) .tab:not(.stacked):hover,
.expandedTray .tab.focus,
.expandedTray .tab:hover,
.group-options:hover,
#actions input:hover,
#actions input.appTabIcon.activeAppTab,
.groupSelector:hover,
.groupSelector.dragOver,
.groupSelector.activeGroupItem,
body.classic #classicbutton,
body.grid #gridbutton,
body.single #singlebutton {
	background-color: var(--hover-color);
}

.groupItem:not(.thumbing) .tab:not(.stacked).focus .favicon-container,
.groupItem:not(.thumbing) .tab:not(.stacked):hover .favicon-container,
.expandedTray .tab.focus .favicon-container,
.expandedTray .tab:hover .favicon-container,
.groupItem.stackedGroup.activeGroupItem,
.groupItem.stackedGroup:hover,
body.DraggingGroup .groupItem.dragging,
body.DraggingGroup .groupItem.dragging .tab:not(.stacked) .favicon-container,
body.DraggingGroup .groupItem.dragOver,
body.DraggingGroup .groupItem.dragOver .tab:not(.stacked) .favicon-container,
#gridNewGroup:hover,
#gridNewGroup.dragOver {
	background-image: linear-gradient(to bottom, var(--hover-color), var(--hover-color));
}

body.DraggingGroup .groupItem > * {
	opacity: 0.7;
}

.groupSelector:hover .groupThumb,
.groupSelector.dragOver .groupThumb,
.groupSelector.activeGroupItem .groupThumb {
	border-top: var(--group-border-width) solid ThreeDShadow;
	border-bottom: var(--group-border-width) solid ThreeDLightShadow;
	-moz-border-start: var(--group-border-width) solid ThreeDShadow;
	-moz-border-end: var(--group-border-width) solid ThreeDLightShadow;
}

.groupSelector:hover .undo,
.undo:hover {
	opacity: 1;
}

/* Search */

html.thumbing #searchshade,
html.thumbing #search,
body:not(.searching) #searchshade,
body:not(.searching) #search {
	display: none;
}

#searchshade {
	z-index: 100;
}

#search {
	position: absolute;
	top: 0px;
	left: 0px;
	pointer-events: none;
	z-index: 175;
	width: 100%;
	height: 100%;
}

#search:-moz-locale-dir(rtl) {
	left: auto;
	right: 0;
}

#searchbox {
	position: absolute;
	right: 20px;
	top: 20px;
	pointer-events: auto;
	width: 270px;
	max-width: -moz-available;
	-moz-margin-start: 20px;
	height: 30px;
	color: white;
	border: none;
	background-color: #272727;
	border-radius: 5px;
	-moz-padding-start: 5px;
	-moz-padding-end: 5px;
	font-size: 14px;
}

#searchbox:-moz-locale-dir(rtl) {
	right: auto;
	left: 20px;
}

#otherresults {
	position: absolute;
	overflow: hidden;
	display: flex;
	left: 0px;
	bottom: 0px;
	width: 100%;
	padding: 4px 2px;
	background-color: rgba(0,0,0,.3);
	box-shadow: 0px -1px 0px rgba(255,255,255,.1), inset 0px 2px 5px rgba(0,0,0,.3);
}

#otherresults:not(.hasMatches) {
	display: none;
}

#otherresults .label {
	color: #999;
	margin: 4px 7px;
}

#results {
	display: flex;
	flex-wrap: wrap;
	align-content: flex-start;
	flex: 1 1 auto;
}

.onTop {
	z-index: 150 !important;
}

.notMainMatch {
	opacity: 0.7;
}

.inlineMatch {
	display: flex;
	pointer-events: auto;
	background-color: #EBEBEB;
	border-radius: 5px;
	box-shadow: 0 1px 4px rgba(0, 0, 0, 0.6);
	border: 1px solid rgba(255, 255, 255, 0.5);
	padding: 2px 3px;
	margin-top: 1px;
	margin-bottom: 1px;
	-moz-margin-end: 7px;
	cursor: pointer;
}

.inlineMatch:hover {
	opacity: 1.0;
}

.inlineMatch > img {
	-moz-margin-end: 5px;
	position: relative;
	top: calc(50% - 8px);
	width: var(--favicon-size);
	height: var(--favicon-size);
}

.inlineMatch > span {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	max-width: 200px;
}

/* Per-group options sub-dialog */

body:not(.groupOptions) #groupOptions-shade,
body:not(.groupOptions) #groupOptions,
body:not(.single) .notapplicable-single {
	display: none;
}

#groupOptions-shade {
	z-index: 100;
}

#groupOptions {
	z-index: 175;
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	width: 80%;
	height: 80%;
	max-width: 800px;
	max-height: 600px;
	overflow: auto;
	padding: 26px;
	background: white;
	font-size: 20px;
}

#groupOptions-close {
	position: absolute;
	top: 0;
	width: 26px;
	height: 26px;
}

#groupOptions-close:-moz-locale-dir(ltr) {
	right: 0;
}
#groupOptions-close:-moz-locale-dir(rtl) {
	left: 0;
}

#groupOptions-title {
	text-overflow: ellipsis;
	background: none;
	border: none;
	border-bottom: 1px solid rgba(128,128,128,0.3);
	/* subtract own border and padding */
	width: 100%;
	font-size: 26px;
}

#groupOptions-title:focus {
	text-overflow: clip;
}

#groupOptions-title::-moz-placeholder {
	font-style: italic;
	color: rgba(128,128,128,1);
}

#groupOptions-title:focus::-moz-placeholder {
	color: transparent;
}

#groupOptions .caption {
	font-weight: bold;
	margin: 5px 0;
}

#groupOptions .radio-option {
	display: inline;
	-moz-margin-end: 18px;
}

#groupOptions input[type="radio"] {
	-moz-margin-end: 8px;
}

#groupOptions *:not(input)[disabled="true"] {
	opacity: 0.5;
}
